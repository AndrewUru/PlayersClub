---
import type { CollectionEntry } from "astro:content";
import { getCollection, render, getEntry } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Separator from "../../../components/Separator.astro";

export const getStaticPaths = async () => {
  const albums = await getCollection("albums");

  const paths = await Promise.all(
    albums.map(async (album) => {
      if (!album.data.artist || !album.data.artist.id) return null;

      const artist = await getEntry("artists", album.data.artist.id);
      if (!artist) return null;

      return {
        params: {
          artist_id: album.data.artist.id,
          album_id: album.id,
        },
        props: {
          artist,
          album,
        },
      };
    })
  );

  // Elimina los null
  return paths.filter(Boolean);
};


type Props = {
  artist: CollectionEntry<"artists">; // The artist associated with the album
  album: CollectionEntry<"albums">; // The album being rendered
};

const { artist, album } = Astro.props; // Extract artist and album data from props

// Render the content of the album (e.g., markdown or MDX content)
const { Content } = await render(album);
---

<BaseLayout title={album.data.name}>
  <section>
    <header class="title-header">
      <h2>
        {album.data.name}
        <span class="faded">by {artist.data.stage_name}</span>
      </h2>
      <div><a class="back" href={`/${artist.id}`}>Back to artist</a></div>
    </header>
    <Separator />
    <div class="content-wrap">
      <img
        class="image fade-in"
        src={album.data.image.src}
        alt={album.data.image.alt}
      />
      <div class="content">
        <h3>Track List</h3>
        <ol>
          {album.data.tracks.map((track) => <li>{track}</li>)}
        </ol>
        <Content />
      </div>
    </div>
  </section>
</BaseLayout>
